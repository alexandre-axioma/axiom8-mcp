# docker-compose.yml
# For optimized builds with BuildKit, use: docker-compose -f docker-compose.buildkit.yml up
version: '3.8'

services:
  axiom8-mcp:
    image: axiom8-mcp:latest
    container_name: axiom8-mcp
    restart: unless-stopped
    
    # Environment configuration
    environment:
      # Mode configuration
      MCP_MODE: ${MCP_MODE:-http}
      USE_FIXED_HTTP: ${USE_FIXED_HTTP:-true}  # Use fixed implementation for stability
      AUTH_TOKEN: ${AUTH_TOKEN:?AUTH_TOKEN is required for HTTP mode}
      
      # Application settings
      NODE_ENV: ${NODE_ENV:-production}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      PORT: ${PORT:-3000}
      
      # Database
      NODE_DB_PATH: ${NODE_DB_PATH:-/app/data/nodes.db}
      REBUILD_ON_START: ${REBUILD_ON_START:-false}
      
      # Semantic Search Configuration
      ENABLE_SEMANTIC_SEARCH: ${ENABLE_SEMANTIC_SEARCH:-true}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      COHERE_API_KEY: ${COHERE_API_KEY}
      
      # Embedding Configuration
      EMBEDDING_BATCH_SIZE: ${EMBEDDING_BATCH_SIZE:-100}
      OPENAI_EMBEDDING_MODEL: ${OPENAI_EMBEDDING_MODEL:-text-embedding-3-small}
      
      # Reranking Configuration
      ENABLE_COHERE_RERANKING: ${ENABLE_COHERE_RERANKING:-true}
      COHERE_RERANK_MODEL: ${COHERE_RERANK_MODEL:-rerank-multilingual-v3.0}
      
      # Search Configuration
      RRF_K: ${RRF_K:-60}
      ENABLE_SEARCH_CACHE: ${ENABLE_SEARCH_CACHE:-true}
      SEARCH_CACHE_TTL: ${SEARCH_CACHE_TTL:-300}
      
      # Cost Monitoring
      ENABLE_COST_MONITORING: ${ENABLE_COST_MONITORING:-true}
      DAILY_COST_LIMIT: ${DAILY_COST_LIMIT:-10.00}
      MAX_EMBEDDING_CONTENT_LENGTH: ${MAX_EMBEDDING_CONTENT_LENGTH:-2000}
      SKIP_EMPTY_DESCRIPTIONS: ${SKIP_EMPTY_DESCRIPTIONS:-false}
      
      # Logging
      MCP_LOG_LEVEL: ${MCP_LOG_LEVEL:-info}
      
      # Optional: n8n API configuration (enables 16 additional management tools)
      # Uncomment and configure to enable n8n workflow management
      # N8N_API_URL: ${N8N_API_URL}
      # N8N_API_KEY: ${N8N_API_KEY}
      # N8N_API_TIMEOUT: ${N8N_API_TIMEOUT:-30000}
      # N8N_API_MAX_RETRIES: ${N8N_API_MAX_RETRIES:-3}
    
    # Volumes removed - using embedded database from Docker image
    # volumes:
    #   - n8n-mcp-data:/app/data
    
    # Port mapping
    ports:
      - "${PORT:-3000}:3000"
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Named volume removed - using embedded database from Docker image
# volumes:
#   n8n-mcp-data:
#     driver: local